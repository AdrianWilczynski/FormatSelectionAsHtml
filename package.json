{
  "name": "format-selection-as-html",
  "displayName": "Format Selection As HTML",
  "description": "Format selected text as HTML using js-beautify or Prettier. Useful for code embedded in strings or templating languages without formatting support (like Razor).",
  "icon": "img/icon.png",
  "publisher": "adrianwilczynski",
  "repository": {
    "type": "git",
    "url": "https://github.com/AdrianWilczynski/FormatSelectionAsHtml.git"
  },
  "version": "2.2.0",
  "engines": {
    "vscode": "^1.34.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "Format",
    "Formatting",
    "Selection",
    "HTML",
    "Template",
    "Inline",
    "Literals",
    "Prettier"
  ],
  "activationEvents": [
    "onCommand:extension.formatSelectionAsHtml"
  ],
  "main": "./dist/extension",
  "contributes": {
    "commands": [
      {
        "command": "extension.formatSelectionAsHtml",
        "title": "Format Selection As HTML"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.formatSelectionAsHtml",
          "group": "1_modification@2",
          "when": "editorHasSelection"
        }
      ],
      "commandPalette": [
        {
          "command": "extension.formatSelectionAsHtml",
          "when": "editorHasSelection"
        }
      ]
    },
    "configuration": [
      {
        "title": "Format Selection As HTML",
        "properties": {
          "formatSelectionAsHtml.formatter": {
            "type": "string",
            "enum": [
              "prettier",
              "js-beautify"
            ],
            "default": "js-beautify",
            "description": "Formatter to use."
          },
          "formatSelectionAsHtml.htmlWhitespaceSensitivity": {
            "type": "string",
            "enum": [
              "css",
              "strict",
              "ignore"
            ],
            "default": "ignore",
            "description": "Prettier Whitespace Sensitivity setting."
          },
          "formatSelectionAsHtml.preserveNewlines": {
            "type": "boolean",
            "default": true,
            "description": "Beautify Preserve Newlines setting."
          },
          "formatSelectionAsHtml.maxPreserveNewlines": {
            "type": [
              "integer",
              "null"
            ],
            "default": 1,
            "minimum": 1,
            "description": "Beautify Max Preserve Newlines setting."
          },
          "formatSelectionAsHtml.printWidth": {
            "type": "integer",
            "default": 120,
            "minimum": 0,
            "description": "Maximum amount of characters per line."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "compile": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "devDependencies": {
    "@types/js-beautify": "^1.8.1",
    "@types/mocha": "^2.2.42",
    "@types/node": "^10.12.21",
    "@types/prettier": "^1.19.0",
    "ts-loader": "^6.2.1",
    "tslint": "^5.12.1",
    "typescript": "^3.3.1",
    "vscode": "^1.1.28",
    "webpack": "^4.41.4",
    "webpack-cli": "^3.3.10"
  },
  "dependencies": {
    "js-beautify": "^1.10.2",
    "prettier": "^1.19.1"
  }
}